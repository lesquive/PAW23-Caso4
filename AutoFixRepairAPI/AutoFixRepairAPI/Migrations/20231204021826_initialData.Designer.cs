// <auto-generated />
using System;
using AutoFixRepairAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoFixRepairAPI.Migrations
{
    [DbContext(typeof(AutoFixDbContext))]
    [Migration("20231204021826_initialData")]
    partial class initialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutoFixRepairAPI.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            Apellido = "García",
                            Direccion = "Calle Principal",
                            Email = "juan@example.com",
                            Nombre = "Juan",
                            Telefono = "123456789"
                        },
                        new
                        {
                            ClienteId = 2,
                            Apellido = "López",
                            Direccion = "Avenida Central",
                            Email = "maria@example.com",
                            Nombre = "María",
                            Telefono = "987654321"
                        },
                        new
                        {
                            ClienteId = 3,
                            Apellido = "Martínez",
                            Direccion = "Calle Secundaria",
                            Email = "pedro@example.com",
                            Nombre = "Pedro",
                            Telefono = "456789123"
                        },
                        new
                        {
                            ClienteId = 4,
                            Apellido = "Rodríguez",
                            Direccion = "Plaza Principal",
                            Email = "ana@example.com",
                            Nombre = "Ana",
                            Telefono = "741852963"
                        },
                        new
                        {
                            ClienteId = 5,
                            Apellido = "Gómez",
                            Direccion = "Avenida Norte",
                            Email = "carlos@example.com",
                            Nombre = "Carlos",
                            Telefono = "159263487"
                        },
                        new
                        {
                            ClienteId = 6,
                            Apellido = "Díaz",
                            Direccion = "Calle Sur",
                            Email = "laura@example.com",
                            Nombre = "Laura",
                            Telefono = "369852147"
                        },
                        new
                        {
                            ClienteId = 7,
                            Apellido = "Hernández",
                            Direccion = "Avenida Oeste",
                            Email = "javier@example.com",
                            Nombre = "Javier",
                            Telefono = "258147369"
                        },
                        new
                        {
                            ClienteId = 8,
                            Apellido = "Pérez",
                            Direccion = "Calle Este",
                            Email = "sofia@example.com",
                            Nombre = "Sofía",
                            Telefono = "147852369"
                        });
                });

            modelBuilder.Entity("AutoFixRepairAPI.Models.InformacionServicios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("InformacionServicios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Especialistas en reparación de motores para automóviles de todas las marcas.",
                            Titulo = "Reparación de Motor"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Servicio rápido y eficiente de cambio de neumáticos con las mejores marcas del mercado.",
                            Titulo = "Cambio de Neumáticos"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Mantenimiento completo de automóviles para garantizar su rendimiento y durabilidad.",
                            Titulo = "Revisión y Mantenimiento"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Especialistas en reparación y mantenimiento de sistemas de frenos y suspensión.",
                            Titulo = "Frenos y Suspensión"
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Servicio de diagnóstico, reparación y mantenimiento de sistemas de aire acondicionado.",
                            Titulo = "Aire Acondicionado"
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Reparación y diagnóstico de problemas en el sistema eléctrico del automóvil.",
                            Titulo = "Sistema Eléctrico"
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Cambio de aceite y filtro con productos de calidad para el mejor rendimiento del motor.",
                            Titulo = "Cambio de Aceite"
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Servicio de inspección y corrección para cumplir con los estándares de emisiones.",
                            Titulo = "Inspección de Emisiones"
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Reparación de daños en la carrocería con acabados de alta calidad.",
                            Titulo = "Reparación de Carrocería"
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "Diagnóstico avanzado mediante sistemas computarizados para problemas técnicos.",
                            Titulo = "Diagnóstico Computarizado"
                        },
                        new
                        {
                            Id = 11,
                            Descripcion = "Asistencia y reparación de emergencia las 24 horas del día, los 7 días de la semana.",
                            Titulo = "Servicio de Emergencia"
                        },
                        new
                        {
                            Id = 12,
                            Descripcion = "Servicio de remolque para vehículos averiados hasta nuestro taller.",
                            Titulo = "Servicio de Remolque"
                        },
                        new
                        {
                            Id = 13,
                            Descripcion = "Programas de mantenimiento preventivo para evitar problemas futuros.",
                            Titulo = "Servicio de Mantenimiento Preventivo"
                        });
                });

            modelBuilder.Entity("AutoFixRepairAPI.Models.SolicitudReparacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AnioAutomovil")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("Completada")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("IdMecanicoAsignado")
                        .HasColumnType("int");

                    b.Property<string>("MarcaAutomovil")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ModeloAutomovil")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PlacaAutomovil")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoReparacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TipoReparacionId");

                    b.ToTable("SolicitudesReparacion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnioAutomovil = 2022,
                            ClienteId = 1,
                            Completada = false,
                            MarcaAutomovil = "Marca X",
                            ModeloAutomovil = "Modelo A",
                            PlacaAutomovil = "XYZ456",
                            TipoReparacionId = 1
                        },
                        new
                        {
                            Id = 2,
                            AnioAutomovil = 2022,
                            ClienteId = 2,
                            Completada = false,
                            MarcaAutomovil = "Marca X",
                            ModeloAutomovil = "Modelo A",
                            PlacaAutomovil = "XYZ456",
                            TipoReparacionId = 2
                        },
                        new
                        {
                            Id = 3,
                            AnioAutomovil = 2022,
                            ClienteId = 3,
                            Completada = false,
                            MarcaAutomovil = "Marca X",
                            ModeloAutomovil = "Modelo A",
                            PlacaAutomovil = "XYZ456",
                            TipoReparacionId = 3
                        },
                        new
                        {
                            Id = 4,
                            AnioAutomovil = 2022,
                            ClienteId = 4,
                            Completada = false,
                            MarcaAutomovil = "Marca X",
                            ModeloAutomovil = "Modelo A",
                            PlacaAutomovil = "XYZ456",
                            TipoReparacionId = 4
                        },
                        new
                        {
                            Id = 5,
                            AnioAutomovil = 2022,
                            ClienteId = 5,
                            Completada = false,
                            MarcaAutomovil = "Marca X",
                            ModeloAutomovil = "Modelo A",
                            PlacaAutomovil = "XYZ456",
                            TipoReparacionId = 5
                        },
                        new
                        {
                            Id = 6,
                            AnioAutomovil = 2022,
                            ClienteId = 6,
                            Completada = false,
                            MarcaAutomovil = "Marca X",
                            ModeloAutomovil = "Modelo A",
                            PlacaAutomovil = "XYZ456",
                            TipoReparacionId = 6
                        },
                        new
                        {
                            Id = 7,
                            AnioAutomovil = 2022,
                            ClienteId = 7,
                            Completada = false,
                            MarcaAutomovil = "Marca X",
                            ModeloAutomovil = "Modelo A",
                            PlacaAutomovil = "XYZ456",
                            TipoReparacionId = 7
                        },
                        new
                        {
                            Id = 8,
                            AnioAutomovil = 2022,
                            ClienteId = 3,
                            Completada = false,
                            MarcaAutomovil = "Marca X",
                            ModeloAutomovil = "Modelo A",
                            PlacaAutomovil = "XYZ456",
                            TipoReparacionId = 8
                        },
                        new
                        {
                            Id = 9,
                            AnioAutomovil = 2022,
                            ClienteId = 5,
                            Completada = false,
                            MarcaAutomovil = "Marca X",
                            ModeloAutomovil = "Modelo A",
                            PlacaAutomovil = "XYZ456",
                            TipoReparacionId = 9
                        },
                        new
                        {
                            Id = 10,
                            AnioAutomovil = 2022,
                            ClienteId = 1,
                            Completada = false,
                            MarcaAutomovil = "Marca X",
                            ModeloAutomovil = "Modelo A",
                            PlacaAutomovil = "XYZ456",
                            TipoReparacionId = 10
                        },
                        new
                        {
                            Id = 11,
                            AnioAutomovil = 2022,
                            ClienteId = 3,
                            Completada = false,
                            MarcaAutomovil = "Marca X",
                            ModeloAutomovil = "Modelo A",
                            PlacaAutomovil = "XYZ456",
                            TipoReparacionId = 11
                        });
                });

            modelBuilder.Entity("AutoFixRepairAPI.Models.TipoReparacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TiposReparacion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Reparación de Motor"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Cambio de Neumáticos"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Revisión y Mantenimiento"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Frenos y Suspensión"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Aire Acondicionado"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Sistema Eléctrico"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Cambio de Aceite"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Inspección de Emisiones"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Reparación de Carrocería"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Diagnóstico Computarizado"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Servicio de Emergencia"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Servicio de Remolque"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Servicio de Mantenimiento Preventivo"
                        });
                });

            modelBuilder.Entity("AutoFixRepairAPI.Models.SolicitudReparacion", b =>
                {
                    b.HasOne("AutoFixRepairAPI.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoFixRepairAPI.Models.TipoReparacion", "TipoReparacion")
                        .WithMany()
                        .HasForeignKey("TipoReparacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("TipoReparacion");
                });
#pragma warning restore 612, 618
        }
    }
}
